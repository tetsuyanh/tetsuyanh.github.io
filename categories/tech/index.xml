<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on tetsuyanh.github.io</title>
    <link>https://tetsuyanh.github.io/categories/tech/</link>
    <description>Recent content in Tech on tetsuyanh.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Thu, 02 Apr 2020 18:42:05 +0900</lastBuildDate>
    
	<atom:link href="https://tetsuyanh.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>スオウパーティ流プログラミング教育</title>
      <link>https://tetsuyanh.github.io/blog/2020/04-03/</link>
      <pubDate>Thu, 02 Apr 2020 18:42:05 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2020/04-03/</guid>
      <description>スオウパーティという名前で IT 塾を始めて 3 ヶ月が経ちました。 手探りで自分なりプログラミング教育をやっているので共有します。
スオウパーティでは、教材に Scratch を使っています。 ブロックを繋げて行うビジュアルプログラミングです。 メインターゲットは小学校高学年で、ゲーム制作にフォーカスしています。 というのも、子供が興味を持ち他の人にすぐ遊んでもらえて楽しいのと、プログラミングを含めたプロダクト制作のエッセンスがたくさん詰まっているからです。 塾で大事にしている事は、作りたいアイデアや気持ちを最優先にすることです。 Scratch のブロック機能を 1 つずつ順に教えるようなことはしません。 ゲーム制作の設計や難易度を上げていく過程で、Scratch の新しい機能（概念）を 1 つずつ教えていきます。
  これは無料体験で使っている簡単なサッカーゲームのキャプチャです。 下記 3 つの作り方を教えて、まずはプログラミングに触れてもらいます。 同じキャラクターや背景の題材にはせず、野球やバスケットボールなどに変えてもらいます。
・邪魔者が一定速度で動く
・スペースキーを押すとボールが一定の方向に動く
・ボールがゴールに到達するとゲームクリア、邪魔者に当たったらゲームオーバー
この次になんと画面（シーン）の分割と遷移の概念を頑張って教えます。画面切り替えのメッセージを作成し、その送り手と受け手が離れることで、ブロックの集合が画面単位に別れます。これをやらずに 1 つのブロックが巨大になってしまうと、作っている子供はおろか、教えている先生も理解と指導ができなくなってしまうからです。
  さらには、初期化の概念と位置まで教えます。 その画面の背景変更はその画面の処理の冒頭でやる、といった感じです。 これもやっておかないと、同じブロックが散らばってバグを探すのに苦労してしまいます。
  これらの基礎的な管理はゲームを作り続けるための土台です。 プログラムがバグで動かなくなって 10 分解決できなければ、子供の興味も集中力も一瞬で吹き飛びます。 先生も煩雑になってしまったコードを見るのは非常に辛いです 。
塾に通い上達してきた男の子とはこういう会話をよくします。
「この処理はどっち（どこ）でやるべきか」
もうプロのエンジニアのやり取りと変わりません。 さらには、背景の絵や音の変更を 1 つのキャラクターが持つことに違和感を感じるまでになった時は、即興で「グローバル」という括りを提案してみました。 言葉はちょっとあれかもですが、絵が空っぽのキャラクターを用意して、そこにキャラクターと直接関係ないブロックを集約させました。 キャラクターが演者だとすると、これは黒子や監督に近い存在だと伝えました。 キャラクターのコードは自身の振る舞いに集約され、いわゆるオブジェクト指向に近くなってきます。 「あるべき場所にある、それが直感的で気持ちが良い」という感覚を教えています。 これはもはや煩雑な説明やドキュメントを依存しない必要としない、プロジェクトの技術です。
他にも色々教えています。 変数やブロックの命名が大事ということ。他人のみならず自分が後で見返した時に適切な名前になっているかどうか。 また、ランダム値を使ってゲームの中に意外性や揺らぎを与えること。 変な動きをする、時々ワープする、といった際限のない楽しさや面白さを追求することで、 他者にサービスを提供する＋ α を膨らませることを意識させています。
生徒の作品は了承を得て公開しているのでぜひ見てください。 一部ですが、3 ヶ月でこれだけ色々なゲームを作りました。</description>
    </item>
    
    <item>
      <title>やまぐちITパーティ Vol.1で基調講演しました</title>
      <link>https://tetsuyanh.github.io/blog/2019/12-16/</link>
      <pubDate>Mon, 16 Dec 2019 22:23:49 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/12-16/</guid>
      <description>周南市のコワーキングスペース・カラムで開催されたやまぐちITパーティ Vol.1で基調講演をしました。 https://connpass.com/event/154574/
対象は学生中心ということだったので、仕事の半生をエンジニアとして生きてきた自分の生の声を、 「東京で16年間働いてUターン独立したエンジニアの視点」と題してお話してきました。 東京の会社やそこで得てきたものを過去の話として、そして未来に向けてUターンと独立に至った思い、最後に立ち上げたばかりの新事業IT塾スオウパーティを紹介しました。 詳しくはスライドをご覧ください。
 本イベントは徳山高専の澤くんが主催で立ち、カラムの堀江さんがしっかりフォローされていました。 入念な準備をされていたと思います、１回目とは思えないほどスムーズにイベントは進み、参加者みな濃密な時間を過ごせていたようです。 私は山口に帰ってから沢山の有志の方にお会いしましたが、カラムの堀江さんほど地方の未来を憂いて必死で活動されている方はいません。 今回、少しでもコンテンツとして提供できたことを嬉しく思っています。
これを1回と終わらせずに、私もできることはやっていきたいですし、これからも地元の学生に楽しいタメになる話ができるように活動します。</description>
    </item>
    
    <item>
      <title>不規則シフトをGoogleカレンダーに自動登録</title>
      <link>https://tetsuyanh.github.io/blog/2019/07-09/</link>
      <pubDate>Tue, 09 Jul 2019 20:42:16 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/07-09/</guid>
      <description>なんでGoogleカレンダーは、定期予定の入力しかサポートしてないんですかね？ 不規則な予定ってたくさんの人があるはずなんですが。 モーダルで一ヶ月を表示させてポチポチ日付を選ぶようにして欲しい。
ずっと前から嫁がパートタイマーで、勤務シフトが変則的でした。 Googleカレンダーに登録させてたんですが大変だったと思います。
で、自分も独立して勤怠が不規則になりました。 さて、困ったぞと早速ググッてみました。 多いのは、カレンダー標準の「複製」機能の紹介なんですよね。 いやそれ、不規則シフトの日数分、同じ作業を繰り返して苦行のままだし。
もう少し探してとやっと見つけました。 この方達の書いてる通りにGoogleAppsを組み合わせて見事に目的達成。 自分ではほぼ何もしておらず、この方達に感謝です。
Googleカレンダーで変則シフトを簡単に登録する方法を実践！初心者用に解説・注意点
Googleカレンダーにシフトを簡単に登録する 入力ページを作成する
スマホのウィジェットです↓これがフォームにシフトをポチポチするだけで自動登録されます。素晴らしい。
他にもこれをやってくれるAndroidアプリがありましたが、メンテが疎かなのか全く自動登録されず。 こういうのはGoogleのWebだけで完結するので十分じゃないでしょうか。
この週末の土曜日は福岡で開催されるGo Conference`19に行ってきます！
https://fukuoka.gocon.jp/</description>
    </item>
    
    <item>
      <title>教育ITソリューションExpoに参加してきました</title>
      <link>https://tetsuyanh.github.io/blog/2019/06-22/</link>
      <pubDate>Sat, 22 Jun 2019 10:40:03 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/06-22/</guid>
      <description>教育ITソリューションExpoに参加してきました。三日間フルデイズ。
プログラミングを中心にしたIT塾の事業をやりたいと考えてるので、「塾・専門学校」カテゴリ関係者で参加しました。 著名な方のセミナーもたくさん受講したり、ICTに関わる行政や業者の動向など収穫はたくさんありましたが、 STEM(STEAM)教育の教材探しが主な目的だったで、ここではそれらを簡単に紹介します。
日本企業のswitch education社社。micro:bitの拡張キットを開発・販売しています。 学校向けと塾・ワークショップ向けのパッケージがあります。 国内企業ということで応援したいですね。幾つか買ってみようと思います。 以下は、傾きセンサーを用いた自動販売機を模した作品です。 このように身の回りにあるコンピュータを再現するのは、学習の理解・目的として重要ですね。どの企業もそれは意識されていました。
次は中国の企業2社。
CH MAKER Ed社。 Micro:bitは多様なセンサーがセットで乗ってますが、こちらは右上の通り四角い躯体にモジュールが分れています。 これは見た目で一番興味を引かれました。ズルいのは、LEGOブロックのジョイントが用意されているところですね。 この会社は、上級者向けの本格的なロボット制作の製品も扱っており、ロボコンのような大会も開催しています。
makeblock社。 上記サイトのProductの通り、多様なラインナップを揃えていました。 ほとんどがMicro:bitをベースとしてますが、ここは同等の基盤自体も作っていたり。上記中国企業と同様、モジュールも量攻めです。
最後にSONYのMESH。 こちらはScratch的なコードの学習は一旦置いておいて、簡単なUIでモジュール同士を繋げたり調整したりに留めていました。 取っ掛かりとしては良さそうです。7つのモジュール、他に比べて単価は高めです。 SONYと中国の新興企業が競ってるなんて、なかなかですね。
上記それぞれ、フルセットのキットで揃えると4〜5万円です。 幾つか安価なスターターキットを買って、夏休みに小学生向けにトライアルをしてみたいと思います。</description>
    </item>
    
    <item>
      <title>週報の自動生成ツール開発</title>
      <link>https://tetsuyanh.github.io/blog/2019/03-12/</link>
      <pubDate>Tue, 12 Mar 2019 23:05:14 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/03-12/</guid>
      <description>会社で週報という文化があります。メンバーが一週間の作業のサマリを同僚やマネージャ向けに共有するドキュメントです。
すごく意義があるのですが、きちんと読みやすい形で伝えるにはコストが高く辛いなと思っていました。エウレカさんのGoもくもく会を通して、3ヶ月ぐらい細々と開発を続けてようやくツールとして完成させました。集大成として、今日のもくもく会でLTしてきました。
https://eure.connpass.com/event/120608/
 コードはこちら。
https://github.com/tetsuyanh/weekly-report-gen
抽象化を意識して設計したので、色々なカスタマイズできる余地を残してます。ぜひ使ってみてください。週報は人や会社によって違うので、forkして独自発展していくと良いかもです。</description>
    </item>
    
    <item>
      <title>「EMFM Meetup #1」参加</title>
      <link>https://tetsuyanh.github.io/blog/2019/02-06/</link>
      <pubDate>Wed, 06 Feb 2019 08:31:24 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/02-06/</guid>
      <description>今熱いEM.FMの公開収録に参加してきました。
https://emfm.connpass.com/event/112254/
メルカリの技術ボードである名村さん・是澤さんをゲストとして座談会。 以下、印象的だった言葉をメモしました。
 求めてるエンジニアは自分で意思決定してリリースして数字見て需要やビジネス感を研ぎ澄ましていく。 ダイバーシティで組織が期待する以上の新たな価値が生まれる、日本人だけが集まるより。 組織は個人に任せていいけど依存してはいけない。 2,3年後に自分の仕事を無くす仕組みを作る、その後に次のフェーズにいく。 OKRは上から下が全て繋がってるわけではなく、組織目線を合わせるプラスその人の適切な目標に沿う。 事業のフェーズにあってなければやりたい事にノーを言って、適切な目標を設定する。 ファクトとレコメンドとウィルをコミュニケーションの場に必ず持っていく。 k8sのおかげでマイクロサービスがやれる。 インフラレイヤーの抽象化が、サービスレイヤーへの注力になってきた。  まぁメルカリさん規模の考えることは、自分の環境とは遠いのはありつつ、割と自分も同じように感じている　ので引き続き頑張っていこうと思いました。特にダイバーシティな組織に憧れるので、英語のスキル向上が最優先です。
最後に、今後はパーソナルスポンサーや企業スポンサーを募ることが発表され、第二のrebuild.fmを目指されているようです。</description>
    </item>
    
    <item>
      <title>CoderDojoの初メンター参加</title>
      <link>https://tetsuyanh.github.io/blog/2019/01-20/</link>
      <pubDate>Sun, 20 Jan 2019 21:46:03 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/01-20/</guid>
      <description>子供向けの無料プログラミング教室CoderDojoに初めて参加してきました。
CoderDojoについてはこちらで詳しく。
首都圏はたくさんあって、神奈川県も増えて来て現在13箇所。 今日行ったのは、都合が合った近くの新羽で、月一のペースで開催されていて22回目。 題材として扱っているのはScratchのみ。 カリキュラムを付きっ切りで教えるのではなく、あくまで子供たち主体で作って、分からないところはメンターに聞く流れです。
プログラミングというかIT周りが「情報」という必須教科に近々なりますし、 子供のプログラミングへの興味や取り組み方に興味がありました。 この日来ていた家族は4組。 3組は初心者で、お父さんお母さんと相談しながらやってました。
1組だけ熟練の小四の女の子がいて、お母さんはすぐ抜けてお買い物？に行った様子。 少し画面を見せてもらって話すと、なんと凝ったスゴロクゲームを作っていました。 スプラッシュ画面があったり、キャラが吹き出しで喋って説明してくれたり。 ゲーム性に加えて絵本や物語を作るイメージもあるようでした。 リッチなゲームを作ろうとしてたので、すごくシンプルなものから作るようにアドバイスしました。
そして、その子にインスパイアされて自分もスゴロクゲームを作ってみました。 どうにか最低限の形にしたので全世界に公開ですw PCのスペースキーが前提だから、スマホのタップだと動かないのかな・・。

Scratchは最近version3がリリースされてタブレット対応されたようです。 また来月あたり参加する予定なのでレポートします。</description>
    </item>
    
    <item>
      <title>個人サイトの日本語対応</title>
      <link>https://tetsuyanh.github.io/blog/2019/01-19/</link>
      <pubDate>Sat, 19 Jan 2019 18:35:09 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/01-19/</guid>
      <description>この個人サイトにhugoという静的サイトジェネレータを採用して、幾つかブログを書いてきたけど文字サイズやレイアウトが割とひどかった。
シンプルなテンプレが良いと思いこのhugo-goaを選んだものの足りないところは色々あって、とりあえず以下を対応した。forkして欲しいものを積みつつ本家は追従する形。
 TwitterCard 日本語のfont対応とfontサイズ調整  無難にWeb-fontのNotoに。   Webフロントの基礎から勉強している感じでちょうど良い。 あと先日、このテンプレの小さなバグ修正PRも取り込んでもらったり。
良い感じの個人サイトにしていきます。</description>
    </item>
    
    <item>
      <title>個人サイトの技術</title>
      <link>https://tetsuyanh.github.io/blog/2019/01-04/</link>
      <pubDate>Fri, 04 Jan 2019 23:47:33 +0900</pubDate>
      
      <guid>https://tetsuyanh.github.io/blog/2019/01-04/</guid>
      <description>hugoという静的ジェネレータを使ってみてる。
hugo-goaというシンプルなテンプレを採用した。
privateなrepoでブログを書いてmasterコミットすると、CIでgithub.ioに自動更新。
エンジニアは割とやってるお得な個人サイト運営。
TravisCIで始めたけど高すぎるので昨日CircleCIの無料枠に変更した。
TwitterCardも今日対応した。
はてなとかでやってればやらなくていいことだけど。</description>
    </item>
    
  </channel>
</rss>